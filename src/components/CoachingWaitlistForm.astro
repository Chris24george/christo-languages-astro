<!-- src/components/ConvertKitForm.astro -->
<!-- ConvertKit Form Embed -->

<script src="https://f.convertkit.com/ckjs/ck.5.js"></script>

<div class="convertkit-form-container relative">
      <form action="https://app.kit.com/forms/7994667/subscriptions" class="seva-form formkit-form w-full mx-auto" method="post" data-sv-form="7994667" data-uid="1d2f944ad0" data-format="inline" data-version="5" data-options='{"settings":{"after_subscribe":{"action":"message","success_message":"Success! Now check your email to confirm your subscription.","redirect_url":""},"analytics":{"google":null,"fathom":null,"facebook":null,"segment":null,"pinterest":null,"sparkloop":null,"googletagmanager":null},"modal":{"trigger":"timer","scroll_percentage":null,"timer":5,"devices":"all","show_once_every":15},"powered_by":{"show":true,"url":"https://kit.com/features/forms?utm_campaign=poweredby&utm_content=form&utm_medium=referral&utm_source=dynamic"},"recaptcha":{"enabled":false},"return_visitor":{"action":"show","custom_content":""},"slide_in":{"display_in":"bottom_right","trigger":"timer","scroll_percentage":null,"timer":5,"devices":"all","show_once_every":15},"sticky_bar":{"display_in":"top","trigger":"timer","scroll_percentage":null,"timer":5,"devices":"all","show_once_every":15}},"version":"5"}' min-width="400 500 600 700 800">
        <div data-style="clean">
            <ul 
                class="formkit-alert formkit-alert-error mt-3 mb-3 px-4 py-3 rounded-md text-sm" 
                data-element="errors" 
                data-group="alert"
                style="background-color: hsl(var(--destructive) / 0.1); border-color: hsl(var(--destructive) / 0.3); color: hsl(var(--destructive-foreground));"
                hidden>
            </ul>
            <div data-element="fields" data-stacked="false" class="seva-fields formkit-fields flex flex-col sm:flex-row gap-3 items-center">
                <div class="formkit-field flex-grow w-full sm:w-auto">
                    <input 
                        class="formkit-input w-full px-4 py-3 border border-border/60 rounded-lg bg-background/80 text-foreground placeholder:text-foreground/50 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/60 transition-colors duration-200" 
                        name="email_address" 
                        aria-label="Email Address" 
                        placeholder="Your email address..." 
                        required="" 
                        type="email" 
                    />
                </div>
                <button 
                    data-element="submit" 
                    class="formkit-submit formkit-submit w-full sm:w-auto px-6 py-3 rounded-lg font-medium cursor-pointer transition-all duration-300 ease-in-out bg-primary text-primary-foreground hover:bg-primary/90 hover:-translate-y-0.5 disabled:opacity-50 disabled:cursor-not-allowed shadow-md hover:shadow-lg shadow-primary/20 hover:shadow-primary/30"
                >
                    <span class="flex items-center justify-center">
                        <span class="formkit-spinner mr-2"><div></div><div></div><div></div></span>
                        Join Waitlist
                    </span>
                </button>
            </div>
            <div class="formkit-powered-by-convertkit-container mt-3">
                <a href="https://kit.com/features/forms?utm_campaign=poweredby&utm_content=form&utm_medium=referral&utm_source=dynamic" data-element="powered-by" class="formkit-powered-by-convertkit text-xs text-foreground/50 hover:text-foreground/70 transition-colors" data-variant="dark" target="_blank" rel="nofollow">Built with Kit</a>
            </div>
        </div>
    </form>

    <!-- Confirmation Modal - Use classes for selection -->
    <div class="confirmation-modal-template fixed inset-0 z-50 hidden items-center justify-center bg-black/60 backdrop-blur-sm" aria-modal="true" role="dialog">
        <div class="bg-card text-card-foreground rounded-xl shadow-xl max-w-md w-full mx-4 p-6 relative transform transition-all duration-300 ease-out scale-95 opacity-0">
            <button class="close-modal-button absolute top-3 right-3 text-muted-foreground hover:text-foreground transition-colors" aria-label="Close modal">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
            <div class="flex items-center mb-4">
                <div class="bg-primary/10 text-primary rounded-full p-2 mr-3">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                </div>
                <h3 class="modal-title-js text-lg font-semibold text-foreground">Check Your Email!</h3>
            </div>
            <p class="text-sm text-muted-foreground mb-5">
                Thanks for signing up! Please check your inbox now to confirm your subscription and join the waitlist.
            </p>
            <button class="close-modal-button w-full px-4 py-2.5 rounded-lg font-medium bg-primary text-primary-foreground hover:bg-primary/90 transition-colors duration-200 shadow-md hover:shadow-lg shadow-primary/10">
                OK
            </button>
        </div>
    </div>
</div>

<style>
    /* Ensure unique styles for this component if needed, or rely on global styles */
    .formkit-form .formkit-spinner {
        display: none; /* Hidden by default */
    }
    
    .formkit-form.formkit-submitting .formkit-submit span span:first-child { /* Target the spinner span */
         display: flex; /* Show spinner during submit */
    }
     .formkit-form.formkit-submitting .formkit-submit span span:not(:first-child) { /* Hide text span */
        /* Optionally hide text or keep it */
    }
    
    .formkit-spinner > div {
        width: 5px;
        height: 5px;
        margin: 0 1px;
        background-color: currentColor;
        border-radius: 50%;
        animation: formkit-bouncedelay 1s infinite ease-in-out both;
    }
    
    .formkit-spinner > div:nth-child(1) {
        animation-delay: -0.32s;
    }
    
    .formkit-spinner > div:nth-child(2) {
        animation-delay: -0.16s;
    }
    
    @keyframes formkit-bouncedelay {
        0%, 80%, 100% {
            transform: scale(0);
        }
        40% {
            transform: scale(1);
        }
    }
    
    /* Modal animation - Use class selector */
    .confirmation-modal-template.flex {
        display: flex;
    }
    .confirmation-modal-template.flex > div {
        opacity: 1;
        transform: scale(1);
    }
</style>

<script>
    // Function to initialize a single ConvertKit form instance
    const initializeConvertKitForm = (formElement: HTMLFormElement) => {
        const componentRoot = formElement.closest<HTMLElement>('.convertkit-form-container');
        if (!componentRoot) {
            console.error('Could not find root .convertkit-form-container for form', formElement);
            return;
        }

        const modal = componentRoot.querySelector<HTMLElement>('.confirmation-modal-template');
        const formWrapper = formElement.parentNode;

        if (!modal || !formWrapper || !(formWrapper instanceof Node)) {
            console.error('ConvertKit form or modal elements not found within instance:', componentRoot);
            return;
        }

        const modalContent = modal.firstElementChild;
        if (!modalContent || !(modalContent instanceof HTMLElement)) {
            console.error('Modal content area not found within instance:', componentRoot);
            return;
        }

        // --- Generate unique IDs for accessibility ---
        const uniqueId = `modal-${Math.random().toString(36).substring(2, 9)}`;
        modal.id = uniqueId;
        const modalTitle = modal.querySelector('.modal-title-js'); 
        if (modalTitle) {
            const titleId = `${uniqueId}-title`;
            modalTitle.id = titleId;
            modal.setAttribute('aria-labelledby', titleId);
        } else {
            console.warn('Modal title element (.modal-title-js) not found for ID generation');
        }

        const closeModalButtons = modal.querySelectorAll('.close-modal-button');

        // Function to open the modal
        const openModal = () => {
            modal.classList.remove('hidden');
            modal.classList.add('flex');
            requestAnimationFrame(() => {
                modalContent.classList.add('opacity-100', 'scale-100');
                modalContent.classList.remove('opacity-0', 'scale-95');
            });
        };

        // Function to close the modal
        const closeModal = () => {
            modalContent.classList.remove('opacity-100', 'scale-100');
            modalContent.classList.add('opacity-0', 'scale-95');
            setTimeout(() => {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
                // Reset submitting state if needed (though ConvertKit might handle this)
                formElement.classList.remove('formkit-submitting');
            }, 300); // Match animation duration
        };

        // Close modal listeners
        closeModalButtons.forEach(button => {
            button.addEventListener('click', closeModal);
        });
        modal.addEventListener('click', (event) => {
            if (event.target === modal) {
                closeModal();
            }
        });

        // --- Attach submit listener --- 
        formElement.addEventListener('submit', (event) => {
            console.log('Form submitted (defaultPrevented:', event.defaultPrevented, '), opening modal for:', componentRoot);
            formElement.classList.add('formkit-submitting');
            
            // Open modal immediately on submit.
            // Note: This assumes ConvertKit's script handles the actual submission.
            openModal(); 
        });

        console.log('Initialized ConvertKit form instance using submit listener:', componentRoot);
    };

    // Initialize all ConvertKit forms on the page after DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
        // Target forms more specifically using ConvertKit attributes
        const allForms = document.querySelectorAll<HTMLFormElement>('.formkit-form[data-sv-form][data-uid]'); 
        if (allForms.length === 0) {
             console.warn('No ConvertKit forms found with data-sv-form and data-uid attributes.');
        }
        // Filter forms that are specifically within our component structure
        const componentForms = Array.from(allForms).filter(form => form.closest('.convertkit-form-container'));
        componentForms.forEach(initializeConvertKitForm);
    });
</script> 