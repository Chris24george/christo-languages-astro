---
// You can import components or define variables here if needed
const siteTitle = "ChristoLanguages";
import '../styles/global.css';
import { ClientRouter } from 'astro:transitions';
// Removed NewsletterSignup import
---
<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Google Fonts Import -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">

		<ClientRouter />
		<title>{siteTitle}</title>
	</head>
	<body 
        class="text-foreground font-sans flex flex-col min-h-screen transition-colors duration-200 ease-in-out"
    >
		<!-- Removed Overlay -->

		<header class="sticky top-0 z-50 w-full border-b border-border/40 bg-card shadow-[0_1px_2px_0_rgba(0,0,0,0.03)]">
			<div class="container mx-auto flex h-16 items-center justify-between px-4">
				<a href="/" class="font-serif text-2xl font-bold text-primary tracking-wide flex items-center gap-2">{siteTitle}</a>

				{/* Mobile Nav Toggle */}
				<button id="nav-toggle" class="md:hidden inline-flex items-center justify-center rounded-md h-10 w-10 bg-primary/10 text-primary hover:bg-primary/20 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2" aria-label="Toggle navigation" aria-expanded="false" aria-controls="nav-menu">
					{/* Hamburger Icon Container */}
					<div class="w-5 h-5 flex flex-col justify-around items-center relative">
						<span class="hamburger-line top block w-full h-[2px] bg-current rounded transition-transform duration-300 ease-in-out"></span>
						<span class="hamburger-line middle block w-full h-[2px] bg-current rounded transition-opacity duration-300 ease-in-out"></span>
						<span class="hamburger-line bottom block w-full h-[2px] bg-current rounded transition-transform duration-300 ease-in-out"></span>
					</div>
					<span class="sr-only">Menu</span>
				</button>

				{/* Desktop Nav / Mobile Dropdown Menu */} 
				<nav 
                    id="nav-menu" 
                    class="absolute top-full left-0 right-0 md:right-auto md:top-auto md:relative
                           p-4 md:p-0 border-b md:border-none border-border bg-card md:bg-transparent shadow-md md:shadow-none
                           hidden md:block z-40 
                           transform origin-top transition-all duration-200 ease-in-out 
                           opacity-0 scale-95 md:opacity-100 md:scale-100 md:transform-none"
                >
					<ul class="flex flex-col md:flex-row items-start md:items-center space-y-4 md:space-y-0 md:space-x-2">
						<li class="w-full md:w-auto">
							<a href="/" class="text-sm font-medium block px-4 py-2 rounded-md hover:bg-primary/10 hover:text-primary focus:bg-primary/10 focus:text-primary transition-colors w-full md:w-auto text-center" data-astro-prefetch>Home</a>
						</li>
						<li class="w-full md:w-auto">
							<a href="/blog" class="text-sm font-medium block px-4 py-2 rounded-md hover:bg-primary/10 hover:text-primary focus:bg-primary/10 focus:text-primary transition-colors w-full md:w-auto text-center" data-astro-prefetch>Blog</a>
						</li>
						<li class="w-full md:w-auto">
							<a href="/shop" class="text-sm font-medium block px-4 py-2 rounded-md hover:bg-primary/10 hover:text-primary focus:bg-primary/10 focus:text-primary transition-colors w-full md:w-auto text-center" data-astro-prefetch>Shop</a>
						</li>
						<li class="w-full md:w-auto">
							<a href="/app" class="text-sm font-medium block px-4 py-2 rounded-md hover:bg-primary/10 hover:text-primary focus:bg-primary/10 focus:text-primary transition-colors w-full md:w-auto text-center" data-astro-prefetch>App</a>
						</li>
						<li class="w-full md:w-auto">
							<a href="/coaching" class="text-sm font-medium block px-4 py-2 rounded-md bg-primary text-primary-foreground hover:bg-primary/90 focus:bg-primary/90 transition-colors w-full md:w-auto text-center" data-astro-prefetch>Coaching</a>
						</li>
					</ul>
				</nav>
			</div>
		</header>
		<main class="flex-grow container mx-auto p-4 md:p-8">
			<slot />
		</main>
		<footer class="bg-card text-secondary-foreground text-sm border-t border-border mt-auto py-6 px-4">
          <div class="container mx-auto flex flex-col md:flex-row justify-between items-center gap-4">
            <p class="text-center md:text-left">&copy; {new Date().getFullYear()} {siteTitle}. All rights reserved.</p>
            <nav>
              <ul class="flex flex-wrap justify-center md:justify-end gap-x-4 gap-y-2">
                <li><a href="/blog" class="hover:text-foreground transition-colors">Blog</a></li>
                <li><a href="/shop" class="hover:text-foreground transition-colors">Shop</a></li>
                <li><a href="/app" class="hover:text-foreground transition-colors">App</a></li>
                <li><a href="/coaching" class="hover:text-foreground transition-colors">Coaching</a></li>
                {/* Add other links like Privacy Policy, Terms, etc. if needed */}
              </ul>
            </nav>
          </div>
		</footer>
	</body>
</html>

<style>
    html {
      overflow-y: scroll;
    }
</style>

<script is:inline>
  // --- Mobile Menu Script ---
  function setupMobileMenu() {
    const navToggle = document.getElementById('nav-toggle');
    const navMenu = document.getElementById('nav-menu');
    const hamburgerLines = navToggle ? {
        top: navToggle.querySelector('.hamburger-line.top'),
        middle: navToggle.querySelector('.hamburger-line.middle'),
        bottom: navToggle.querySelector('.hamburger-line.bottom'),
    } : null;

    // Add active link highlighting
    function highlightActiveLink() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll("#nav-menu a");
      
      navLinks.forEach(link => {
        const linkPath = link.getAttribute('href');
        // Remove existing active classes first
        link.classList.remove('bg-primary/10', 'text-primary');
        
        // Skip the coaching link as it has its own styling
        if (link.href.includes('/coaching')) return;
        
        // Check if this link matches the current path
        if (currentPath === linkPath || 
            (linkPath !== '/' && currentPath.startsWith(linkPath))) {
          link.classList.add('bg-primary/10', 'text-primary');
        }
      });
    }

    function toggleMenu(show) {
        if (!navMenu || !navToggle || !hamburgerLines) return;
        
        const expanded = show;
        navToggle.setAttribute('aria-expanded', String(expanded));

        if (expanded) {
            navMenu.classList.remove('hidden');
            void navMenu.offsetWidth; 
            navMenu.classList.add('block', 'opacity-100', 'scale-100');
            navMenu.classList.remove('opacity-0', 'scale-95');
            hamburgerLines.top.style.transform = 'translateY(7px) rotate(45deg)';
            hamburgerLines.middle.style.opacity = '0';
            hamburgerLines.bottom.style.transform = 'translateY(-7px) rotate(-45deg)';
        } else {
            navMenu.classList.add('opacity-0', 'scale-95');
            navMenu.classList.remove('opacity-100', 'scale-100');
            setTimeout(() => {
                if (navToggle.getAttribute('aria-expanded') === 'false') { 
                    navMenu.classList.add('hidden');
                    navMenu.classList.remove('block');
                }
            }, 200);
            hamburgerLines.top.style.transform = '';
            hamburgerLines.middle.style.opacity = '1';
            hamburgerLines.bottom.style.transform = '';
        }
    }

    if (navToggle && navMenu && hamburgerLines) {
        const clickHandler = (e) => {
            e.stopPropagation(); 
            const isExpanded = navToggle.getAttribute('aria-expanded') === 'true';
            toggleMenu(!isExpanded);
        };
        const outsideClickHandler = (e) => {
            const isMenuOpen = navToggle.getAttribute('aria-expanded') === 'true';
            const isClickOutside = !navToggle.contains(e.target) && !navMenu.contains(e.target);
            if (isMenuOpen && isClickOutside) {
                toggleMenu(false);
            }
        };
        const escapeHandler = (e) => {
            if (e.key === 'Escape' && navToggle.getAttribute('aria-expanded') === 'true') {
                toggleMenu(false);
            }
        };

        // Clean up previous listeners before adding new ones
        navToggle.removeEventListener('click', clickHandler);
        document.removeEventListener('click', outsideClickHandler);
        document.removeEventListener('keydown', escapeHandler);
        
        navToggle.addEventListener('click', clickHandler);
        document.addEventListener('click', outsideClickHandler);
        document.addEventListener('keydown', escapeHandler);
    }
    
    // Call the highlight function
    highlightActiveLink();
  }

  // --- Setup Function called on Astro events ---
  function initializePageScripts() {
      setupMobileMenu();
  }

  // Run scripts on initial load
  if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializePageScripts, { once: true });
  } else {
      initializePageScripts(); // Already loaded
  }
  
  // Re-run scripts after view transitions
  document.addEventListener('astro:page-load', initializePageScripts);

</script>
